<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ sample }}</title>

    <script>
        document.documentElement.setAttribute('data-bs-theme', (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'))
    </script>

    <!-- dotplot requirements-->
    <script src="https://biowasm.com/cdn/v3/aioli.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
    <script src="https://cdn.plot.ly/plotly-2.32.0.min.js" charset="utf-8"></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>

    <link href="../assemblies.css" rel="stylesheet">
    <script type="module" src="../assemblies.js"></script>
    <link href="assembly-curator/assemblies_dynamic.css" rel="stylesheet">
    <!--    <script type="module" crossorigin src="../dotplot.js"></script>-->
</head>

<body>


<div class="zoom-controls">
    <button class="zoom-button" id="ani-zoom-in">Zoom In +</button>
    <button class="zoom-button" id="ani-zoom-out">Zoom Out -</button>
</div>

<div class="text-center">

    <h1 id="sample">{{ sample }}</h1>

    {% if messages %} {% for message in messages %}
        <div class="alert alert-{{ message.severity }}" role="alert">
            {{ message }}
        </div>
    {% endfor %} {% endif %}

    <h2>ANI matrix</h2>

    <div id="ani-clustermap-container">
        <img id="ani-matrix-svg" src="assembly-curator/ani_clustermap.svg" alt="ANI clustermap">
    </div>

</div>

<div class="container text-center dotplots">
    <h2>Dotplots for clusters</h2>

    <ul class="nav nav-tabs justify-content-center" id="cluster-tabs" role="tablist">
        {% for cluster_id, color in cluster_to_color.items() %}
            <li class="nav-item" role="presentation">
            <button class="nav-link" id="cluster-{{ cluster_id }}-tab" data-bs-toggle="tab"
                    data-bs-target="#cluster-{{ cluster_id }}-tab-pane" type="button" role="tab"
                    aria-controls="cluster-{{ cluster_id }}-tab-pane" aria-selected="false"
                    style="background-color: {{ color }};">
                Cluster {{ cluster_id }}
            </button>
        {% endfor %}
    </ul>
    <div class="tab-content" id="cluster-tabs-content">
        {% for cluster_id in cluster_to_color %}
            <div class="tab-pane fade" id="cluster-{{ cluster_id }}-tab-pane" role="tabpanel"
                 aria-labelledby="cluster-{{ cluster_id }}-tab" tabindex="0">
                <img class="dotplot-svg" src="assembly-curator/dotplots/{{ cluster_id }}.svg">
            </div>
        {% endfor %}
    </div>

    <h2>Assembly statistics</h2>

</div>


<div class="table-container">
    <table class="table table-striped table-bordered">
        <thead>
        <tr>
            <th>Assembler</th>
            {% for assembly in assemblies %}
                <th scope="col">{{ assembly.assembler }}</th>
            {% endfor %}
        </tr>
        </thead>
        <tbody class="table-group-divider">
        <tr>
            <th scope="row">Length</th>
            {% for assembly in assemblies %}
                <td>{{ assembly.__len__() }}bp</td>
            {% endfor %}
        </tr>
        <tr>
            <th scope="row">Length (human)</th>
            {% for assembly in assemblies %}
                <td>{{ assembly.len_human() }}</td>
            {% endfor %}
        </tr>
        <tr>
            <th scope="row">Number of contigs</th>
            {% for assembly in assemblies %}
                <td>{{ assembly.contig_groups.__len__() }}</td>
            {% endfor %}
        </tr>
        <tr>
            <th scope="row">GC content</th>
            {% for assembly in assemblies %}
                <td>
                    {{ (assembly.gc_content() * 100)|round(2) }}%
                    <div class="assembly-atgc" data-atgc="{{ assembly.atgc_count }}"></div>
                </td>
            {% endfor %}
        </tr>

        <tr id="row-contigs">
            <th scope="row">Contigs</th>
            {% for assembly in assemblies %}
                <td>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="cg-all-{{ assembly.assembler }}"
                               onclick="toggleAllContigGroups('{{ assembly.assembler }}')">
                        <label class="form-check-label" for="cg-all-{{ assembly.assembler }}">
                            Select all
                        </label>
                    </div>

                    <div class="assembly" data-assembly="{{ assembly.assembler }}">
                        {% for contig_group in assembly.contig_groups %}
                            {% if contig_group.contigs.__len__() == 1 %}
                                {% for contig in contig_group.contigs %}
                                    <div class="contig-group btn-group {{ contig.id }} {{ contig_group.id }}"
                                         role="group"
                                         data-cg="{{ contig_group.id }}">
                                        <div class="btn btn-secondary cluster-indicator">
                                            C{{ contig_group.cluster_id }}
                                        </div>
                                        <div class="btn btn-secondary contig-indicator">
                                            {{ contig.original_id }} ({{ contig.len_human() }})
                                            <span class="position-absolute top-0 start-100 translate-middle-custom">
                                            <div class="d-flex">
                                              {{ contig.atgc_badge|safe }}
                                              {{ contig.topology_badge|safe }}
                                              {% if contig.has_coverage %}{{ contig.coverage_badge|safe }}{% endif %}
                                            </div>
                                        </span>
                                        </div>
                                        <div class="btn btn-secondary atgc-indicator"
                                             data-atgc="{{ contig.atgc_count }}"></div>
                                    </div>
                                {% endfor %}
                            {% else %}
                                <div class="contig-group card {{ contig_group.id }}" data-cg="{{ contig_group.id }}">
                                    <div class="card-header">
                                        Group: {{ contig_group.id }} ({{ contig_group.len_human() }})
                                    </div>
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item">
                                            {% for contig in contig_group.contigs %}
                                                <div class="btn btn-secondary position-relative {{ contig.id }} contig-atgc"
                                                     data-atgc="{{ contig.atgc_count }}">
                                                    {{ contig.original_id }} ({{ contig.len_human() }})
                                                    <span class="position-absolute top-0 start-100 translate-middle-custom">
            <div class="d-flex">
              {{ contig.atgc_badge|safe }}
              {{ contig.topology_badge|safe }}
              {% if contig.has_coverage %}{{ contig.coverage_badge|safe }}{% endif %}
            </div>
        </span>
                                                </div>
                                            {% endfor %}
                                        </li>
                                    </ul>
                                </div>
                            {% endif %}

                            </div>
                        {% endfor %}
                </div>
                </td>
            {% endfor %}
</tr>
<tr>

<tr>
    <th scope="row">Plot</th>
    {% for assembly in assemblies %}
        <td class="gfaviz-container" data-assembly="{{ assembly.assembler }}">
            <img class="gfaviz-svg" src="{{ assembly.assembly_dir }}/{{ assembly.plot }}"
                 alt="no assembly graph available">
        </td>
    {% endfor %}
</tr>

</table>
</div>

<div class="container text-center">
    <button id="btn-export" type="button" class="btn btn-primary">Export</button>
    <div id="export-div"></div>
</div>

<script>
    const sampleToCluster = JSON.parse('{{ sample_to_cluster|tojson }}');
</script>

</body>
</html>